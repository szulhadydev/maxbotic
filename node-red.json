[
    {
        "id": "ultrasonic_tab",
        "type": "tab",
        "label": "Ultrasonic Relay Control",
        "disabled": false,
        "info": "Remote control and monitoring for ultrasonic sensor relay system",
        "env": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Ultrasonic MQTT Broker",
        "broker": "xx.xxx.xxx",
        "port": "1883",
        "clientid": "nodered-client",
        "usetls": false,
        "usews": false,
        "verifyservercert": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ui_group_control",
        "type": "ui_group",
        "name": "Relay Control",
        "tab": "ui_tab_main",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ui_group_status",
        "type": "ui_group",
        "name": "System Status",
        "tab": "ui_tab_main",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ui_group_sensor",
        "type": "ui_group",
        "name": "Sensor Data",
        "tab": "ui_tab_main",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ui_tab_main",
        "type": "ui_tab",
        "name": "Ultrasonic Control",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "relay_on_button",
        "type": "ui_button",
        "z": "ultrasonic_tab",
        "name": "Relay ON",
        "group": "ui_group_control",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Turn ON",
        "tooltip": "Turn relay ON (manual mode)",
        "color": "",
        "bgcolor": "#AD1625",
        "icon": "power",
        "payload": "{\"relay\": \"on\"}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 80,
        "wires": [["control_output"]]
    },
    {
        "id": "relay_off_button",
        "type": "ui_button",
        "z": "ultrasonic_tab",
        "name": "Relay OFF",
        "group": "ui_group_control",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Turn OFF",
        "tooltip": "Turn relay OFF (manual mode)",
        "color": "",
        "bgcolor": "#1F8A70",
        "icon": "power_off",
        "payload": "{\"relay\": \"off\"}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 120,
        "wires": [["control_output"]]
    },
    {
        "id": "auto_mode_button",
        "type": "ui_button",
        "z": "ultrasonic_tab",
        "name": "Auto Mode",
        "group": "ui_group_control",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Auto Mode",
        "tooltip": "Switch to automatic distance-based control",
        "color": "",
        "bgcolor": "#2E86AB",
        "icon": "settings_remote",
        "payload": "{\"mode\": \"auto\"}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 160,
        "wires": [["control_output"]]
    },
    {
        "id": "status_button",
        "type": "ui_button",
        "z": "ultrasonic_tab",
        "name": "Request Status",
        "group": "ui_group_control",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Status",
        "tooltip": "Request current system status",
        "color": "",
        "bgcolor": "#A23B72",
        "icon": "info",
        "payload": "{\"status\": \"request\"}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 200,
        "wires": [["control_output"]]
    },
    {
        "id": "control_output",
        "type": "mqtt out",
        "z": "ultrasonic_tab",
        "name": "Control Commands",
        "topic": "dtonggang/ultrasonic-01/control",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 360,
        "y": 140,
        "wires": []
    },
    {
        "id": "sensor_data_input",
        "type": "mqtt in",
        "z": "ultrasonic_tab",
        "name": "Sensor Data",
        "topic": "dtonggang/ultrasonic-01",
        "qos": "2",
        "datatype": "json",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 320,
        "wires": [["sensor_parser", "sensor_debug"]]
    },
    {
        "id": "status_input",
        "type": "mqtt in",
        "z": "ultrasonic_tab",
        "name": "Status Updates",
        "topic": "dtonggang/ultrasonic-01/status",
        "qos": "2",
        "datatype": "json",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 400,
        "wires": [["status_parser", "status_debug"]]
    },
    {
        "id": "sensor_parser",
        "type": "function",
        "z": "ultrasonic_tab",
        "name": "Parse Sensor Data",
        "func": "// Parse incoming sensor data\nlet data = msg.payload;\n\n// Update global context for dashboard\ncontext.global.set('lastDistance', data.distance);\ncontext.global.set('lastRelayStatus', data.relay_status);\ncontext.global.set('lastControlMode', data.control_mode);\ncontext.global.set('lastTimestamp', data.timestamp);\n\n// Output for distance gauge\nmsg.distance = {\n    payload: data.distance,\n    topic: 'distance'\n};\n\n// Output for relay status indicator\nmsg.relayStatus = {\n    payload: data.relay_status === 'on' ? 1 : 0,\n    topic: 'relay_status'\n};\n\n// Output for control mode indicator\nmsg.controlMode = {\n    payload: data.control_mode,\n    topic: 'control_mode'\n};\n\n// Output for chart data\nmsg.chartData = {\n    payload: {\n        timestamp: new Date(data.timestamp).getTime(),\n        distance: data.distance,\n        relay: data.relay_status === 'on' ? 1 : 0\n    },\n    topic: 'chart'\n};\n\nreturn [msg.distance, msg.relayStatus, msg.controlMode, msg.chartData];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            ["distance_gauge"],
            ["relay_indicator"],
            ["mode_indicator"],
            ["distance_chart"]
        ]
    },
    {
        "id": "status_parser",
        "type": "function",
        "z": "ultrasonic_tab",
        "name": "Parse Status Data",
        "func": "// Parse incoming status data\nlet data = msg.payload;\n\n// Update status display\nmsg.statusText = {\n    payload: `Relay: ${data.relay_status.toUpperCase()} | Mode: ${data.control_mode.toUpperCase()} | Reason: ${data.reason}`,\n    topic: 'status_text'\n};\n\n// Update last update time\nmsg.lastUpdate = {\n    payload: new Date(data.timestamp).toLocaleString(),\n    topic: 'last_update'\n};\n\nreturn [msg.statusText, msg.lastUpdate];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            ["status_text"],
            ["last_update_text"]
        ]
    },
    {
        "id": "distance_gauge",
        "type": "ui_gauge",
        "z": "ultrasonic_tab",
        "name": "Distance",
        "group": "ui_group_sensor",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Distance (meters)",
        "label": "m",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "5",
        "seg2": "7",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "relay_indicator",
        "type": "ui_led",
        "z": "ultrasonic_tab",
        "order": 1,
        "group": "ui_group_status",
        "width": 2,
        "height": 1,
        "label": "Relay Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Relay LED",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "mode_indicator",
        "type": "ui_text",
        "z": "ultrasonic_tab",
        "group": "ui_group_status",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "Control Mode",
        "label": "Control Mode:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "status_text",
        "type": "ui_text",
        "z": "ultrasonic_tab",
        "group": "ui_group_status",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "System Status",
        "label": "Status:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 400,
        "wires": []
    },
    {
        "id": "last_update_text",
        "type": "ui_text",
        "z": "ultrasonic_tab",
        "group": "ui_group_status",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Last Update",
        "label": "Last Update:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 440,
        "wires": []
    },
    {
        "id": "distance_chart",
        "type": "ui_chart",
        "z": "ultrasonic_tab",
        "name": "Distance History",
        "group": "ui_group_sensor",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "Distance Over Time",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "0",
        "ymax": "10",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 600,
        "y": 480,
        "wires": [[]]
    },
    {
        "id": "sensor_debug",
        "type": "debug",
        "z": "ultrasonic_tab",
        "name": "Sensor Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 260,
        "wires": []
    },
    {
        "id": "status_debug",
        "type": "debug",
        "z": "ultrasonic_tab",
        "name": "Status Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 540,
        "wires": []
    },
    {
        "id": "inject_test_on",
        "type": "inject",
        "z": "ultrasonic_tab",
        "name": "Test: Relay ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"relay\": \"on\"}",
        "payloadType": "str",
        "x": 130,
        "y": 600,
        "wires": [["control_output"]]
    },
    {
        "id": "inject_test_off",
        "type": "inject",
        "z": "ultrasonic_tab",
        "name": "Test: Relay OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"relay\": \"off\"}",
        "payloadType": "str",
        "x": 130,
        "y": 640,
        "wires": [["control_output"]]
    },
    {
        "id": "inject_test_auto",
        "type": "inject",
        "z": "ultrasonic_tab",
        "name": "Test: Auto Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"mode\": \"auto\"}",
        "payloadType": "str",
        "x": 130,
        "y": 680,
        "wires": [["control_output"]]
    },
    {
        "id": "inject_test_status",
        "type": "inject",
        "z": "ultrasonic_tab",
        "name": "Test: Status Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\": \"request\"}",
        "payloadType": "str",
        "x": 140,
        "y": 720,
        "wires": [["control_output"]]
    }
]